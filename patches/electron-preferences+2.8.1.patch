diff --git a/node_modules/electron-preferences/build/index.html b/node_modules/electron-preferences/build/index.html
index 3699e18..dc13a0f 100644
--- a/node_modules/electron-preferences/build/index.html
+++ b/node_modules/electron-preferences/build/index.html
@@ -1,11 +1,23 @@
 <!DOCTYPE html>
 <html>
-  <head>
-    <meta charset="UTF-8" />
-    <title>Preferences</title>
-  </head>
-  <body>
+<head>
+    <meta charset="UTF-8">
+    <script>
+        window.__setTheme = () => {
+            const prefs = api.getPreferences();
+            const theme = prefs.emulator.theme || "purple";
+            document.documentElement.setAttribute("data-theme", theme === "system" ? "dark" : theme);
+            api.onPreferencesChanged(prefs => {
+                const theme = prefs.emulator.theme || "purple";
+                document.documentElement.setAttribute("data-theme", theme === "system" ? "dark" : theme);
+            });
+        }        
+        __setTheme();
+    </script>
+</head>
+
+<body>
     <div class="window noselect" id="window"></div>
     <script src="app.js"></script>
-  </body>
+</body>
 </html>
diff --git a/node_modules/electron-preferences/preload.js b/node_modules/electron-preferences/preload.js
index 0c91968..984ecbf 100644
--- a/node_modules/electron-preferences/preload.js
+++ b/node_modules/electron-preferences/preload.js
@@ -6,6 +6,7 @@ const { contextBridge } = electron;
 const { ipcRenderer } = electron;
 
 const deserializeJson = (serializedJavascript) => eval('(' + serializedJavascript + ')'); //deserialize function for 'serialize-javascript' library
+let onPreferencesChangedHandler = () => {};
 
 contextBridge.exposeInMainWorld('api', {
 	getSections: () => deserializeJson(ipcRenderer.sendSync('getSections')),
@@ -14,5 +15,10 @@ contextBridge.exposeInMainWorld('api', {
 	setPreferences: preferences => ipcRenderer.send('setPreferences', preferences),
 	showOpenDialog: dialogOptions => ipcRenderer.sendSync('showOpenDialog', dialogOptions),
 	sendButtonClick: channel => ipcRenderer.send('sendButtonClick', channel),
-  encrypt: secret => ipcRenderer.sendSync('encrypt', secret),
+  	encrypt: secret => ipcRenderer.sendSync('encrypt', secret),
+	onPreferencesChanged: handler => { onPreferencesChangedHandler = handler; },
+});
+
+ipcRenderer.on('preferencesUpdated', (e, preferences) => {
+	onPreferencesChangedHandler(preferences);
 });
\ No newline at end of file
