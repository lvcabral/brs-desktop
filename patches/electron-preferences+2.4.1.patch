diff --git a/node_modules/electron-preferences/build/index.html b/node_modules/electron-preferences/build/index.html
index 279f85c..e2ac474 100644
--- a/node_modules/electron-preferences/build/index.html
+++ b/node_modules/electron-preferences/build/index.html
@@ -1,10 +1,25 @@
 <!DOCTYPE html>
 <html>
-    <head>
-        <meta charset="UTF-8">
-    </head>
-    <body>
-        <div class="window noselect" id="window"></div>
-        <script src="app.js"></script>
-    </body>
+
+<head>
+    <meta charset="UTF-8">
+    <script>
+        window.__setTheme = () => {
+            const prefs = api.getPreferences();
+            const theme = prefs.emulator.theme || "purple";
+            document.documentElement.setAttribute("data-theme", theme === "system" ? "dark" : theme);
+            api.onPreferencesChanged(prefs => {
+                const theme = prefs.emulator.theme || "purple";
+                document.documentElement.setAttribute("data-theme", theme === "system" ? "dark" : theme);
+            });
+        }        
+        __setTheme();
+    </script>
+</head>
+
+<body>
+    <div class="window noselect" id="window"></div>
+    <script src="app.js"></script>
+</body>
+
 </html>
\ No newline at end of file
diff --git a/node_modules/electron-preferences/preload.js b/node_modules/electron-preferences/preload.js
index 49c4a44..731aea0 100644
--- a/node_modules/electron-preferences/preload.js
+++ b/node_modules/electron-preferences/preload.js
@@ -3,6 +3,7 @@
 const electron = require('electron');
 const { contextBridge } = electron;
 const { ipcRenderer } = electron;
+let onPreferencesChangedHandler = () => {};
 
 contextBridge.exposeInMainWorld('api', {
 	getSections: () => ipcRenderer.sendSync('getSections'),
@@ -10,4 +11,10 @@ contextBridge.exposeInMainWorld('api', {
 	getDefaults: () => ipcRenderer.sendSync('getDefaults'),
 	setPreferences: preferences => ipcRenderer.send('setPreferences', preferences),
 	showOpenDialog: dialogOptions => ipcRenderer.sendSync('showOpenDialog', dialogOptions),
+	onPreferencesChanged: handler => { onPreferencesChangedHandler = handler; },
+});
+ipcRenderer.on('preferencesUpdated', (e, preferences) => {
+
+	onPreferencesChangedHandler(preferences);
+
 });
